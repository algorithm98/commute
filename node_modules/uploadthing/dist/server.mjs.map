{"version":3,"sources":["../src/internal/types.ts","../src/sdk/index.ts","../src/internal/edge.ts","../src/server.ts"],"sourcesContent":["import type { NextApiRequest, NextApiResponse } from \"next\";\nimport type { NextRequest } from \"next/server\";\n\nimport type {\n  FileRouterInputConfig,\n  UploadedFile,\n  UploadThingError,\n} from \"@uploadthing/shared\";\n\nimport type { JsonParser } from \"./parser\";\n\n//\n// Utils\nexport const unsetMarker = \"unsetMarker\" as \"unsetMarker\" & {\n  __brand: \"unsetMarker\";\n};\nexport type UnsetMarker = typeof unsetMarker;\n\nexport type Simplify<TType> = { [TKey in keyof TType]: TType[TKey] } & {};\n\nexport type MaybePromise<TType> = TType | Promise<TType>;\n\n//\n// Package\ntype ResolverOptions<TParams extends AnyParams> = {\n  metadata: Simplify<\n    TParams[\"_metadata\"] extends UnsetMarker ? undefined : TParams[\"_metadata\"]\n  >;\n\n  file: UploadedFile;\n};\n\nexport type AnyRuntime = \"app\" | \"pages\" | \"web\";\nexport interface AnyParams {\n  _input: any;\n  _metadata: any; // imaginary field used to bind metadata return type to an Upload resolver\n  _runtime: any;\n  _errorShape: any;\n}\n\ntype MiddlewareFnArgs<TParams extends AnyParams> =\n  TParams[\"_runtime\"] extends \"web\"\n    ? { req: Request; res?: never; input: TParams[\"_input\"] }\n    : TParams[\"_runtime\"] extends \"app\"\n    ? { req: NextRequest; res?: never; input: TParams[\"_input\"] }\n    : { req: NextApiRequest; res: NextApiResponse; input: TParams[\"_input\"] };\n\ntype MiddlewareFn<\n  TOutput extends Record<string, unknown>,\n  TParams extends AnyParams,\n> = (opts: MiddlewareFnArgs<TParams>) => MaybePromise<TOutput>;\n\ntype ResolverFn<TParams extends AnyParams> = (\n  opts: ResolverOptions<TParams>,\n) => MaybePromise<void>;\n\nexport type ErrorMessage<TError extends string> = TError;\n\nexport interface UploadBuilder<TParams extends AnyParams> {\n  input: <TParser extends JsonParser>(\n    parser: TParams[\"_input\"] extends UnsetMarker\n      ? TParser\n      : ErrorMessage<\"input is already set\">,\n  ) => UploadBuilder<{\n    _input: TParser[\"_output\"];\n    _metadata: TParams[\"_metadata\"];\n    _runtime: TParams[\"_runtime\"];\n    _errorShape: TParams[\"_errorShape\"];\n  }>;\n  middleware: <TOutput extends Record<string, unknown>>(\n    fn: TParams[\"_metadata\"] extends UnsetMarker\n      ? MiddlewareFn<TOutput, TParams>\n      : ErrorMessage<\"middleware is already set\">,\n  ) => UploadBuilder<{\n    _input: TParams[\"_input\"];\n    _metadata: TOutput;\n    _runtime: TParams[\"_runtime\"];\n    _errorShape: TParams[\"_errorShape\"];\n  }>;\n\n  onUploadComplete: (fn: ResolverFn<TParams>) => Uploader<TParams>;\n}\n\nexport type UploadBuilderDef<TParams extends AnyParams> = {\n  routerConfig: FileRouterInputConfig;\n  inputParser: JsonParser;\n  middleware: MiddlewareFn<{}, TParams>;\n  errorFormatter: (err: UploadThingError) => TParams[\"_errorShape\"];\n};\n\nexport interface Uploader<TParams extends AnyParams> {\n  _def: TParams & UploadBuilderDef<TParams>;\n  resolver: ResolverFn<TParams>;\n}\n\nexport type FileRouter<TParams extends AnyParams = AnyParams> = Record<\n  string,\n  Uploader<TParams>\n>;\n\nexport type inferEndpointInput<TUploader extends Uploader<any>> =\n  TUploader[\"_def\"][\"_input\"] extends UnsetMarker\n    ? undefined\n    : TUploader[\"_def\"][\"_input\"];\n\nexport type inferErrorShape<TRouter extends FileRouter> =\n  TRouter[keyof TRouter][\"_def\"][\"_errorShape\"];\n","import { generateUploadThingURL } from \"@uploadthing/shared\";\n\nimport { UPLOADTHING_VERSION } from \"../constants\";\n\nconst UT_SECRET = process.env.UPLOADTHING_SECRET;\n\n/**\n * Request to delete files from UploadThing storage.\n * @param {string | string[]} fileKeys\n * @example\n * await deleteFiles(\"2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\");\n * @example\n * await deleteFiles([\"2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\",\"1649353b-04ea-48a2-9db7-31de7f562c8d_image2.jpg\"])\n */\nexport const deleteFiles = async (fileKeys: string[] | string) => {\n  if (!Array.isArray(fileKeys)) fileKeys = [fileKeys];\n  if (!UT_SECRET) throw new Error(\"Missing UPLOADTHING_SECRET env variable.\");\n\n  const res = await fetch(generateUploadThingURL(\"/api/deleteFile\"), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-uploadthing-api-key\": UT_SECRET,\n      \"x-uploadthing-version\": UPLOADTHING_VERSION,\n    },\n    body: JSON.stringify({ fileKeys }),\n  });\n  if (!res.ok) {\n    throw new Error(\"Failed to delete files\");\n  }\n  return res.json() as Promise<{ success: boolean }>;\n};\n\n/**\n * Request file URLs from UploadThing storage.\n * @param {string | string[]} fileKeys\n * @example\n * const data = await getFileUrls(\"2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\");\n * console.log(data); // [{key: \"2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\", url: \"https://uploadthing.com/f/2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\"}]\n *\n * @example\n * const data = await getFileUrls([\"2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\",\"1649353b-04ea-48a2-9db7-31de7f562c8d_image2.jpg\"])\n * console.log(data) // [{key: \"2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\", url: \"https://uploadthing.com/f/2e0fdb64-9957-4262-8e45-f372ba903ac8_image.jpg\" },{key: \"1649353b-04ea-48a2-9db7-31de7f562c8d_image2.jpg\", url: \"https://uploadthing.com/f/1649353b-04ea-48a2-9db7-31de7f562c8d_image2.jpg\"}]\n */\nexport const getFileUrls = async (fileKeys: string[] | string) => {\n  if (!Array.isArray(fileKeys)) fileKeys = [fileKeys];\n  if (!UT_SECRET) throw new Error(\"Missing UPLOADTHING_SECRET env variable.\");\n\n  const res = await fetch(generateUploadThingURL(\"/api/getFileUrl\"), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-uploadthing-api-key\": UT_SECRET,\n      \"x-uploadthing-version\": UPLOADTHING_VERSION,\n    },\n    body: JSON.stringify({ fileKeys }),\n  });\n  if (!res.ok) {\n    throw new Error(\"Failed to get file urls\");\n  }\n  return res.json().then(({ data }) => data as { key: string; url: string }[]);\n};\n","import { createNextRouteHandler } from \"../next\";\n\nexport const createServerHandler = (\n  ...args: Parameters<typeof createNextRouteHandler>\n) => {\n  const handler = createNextRouteHandler(...args);\n  const thisHandler =\n    (method: keyof typeof handler) => (event: { request: Request } | Request) =>\n      handler[method](event instanceof Request ? event : event.request);\n  return {\n    GET: thisHandler(\"GET\"),\n    POST: thisHandler(\"POST\"),\n  };\n};\n","import type { Json } from \"@uploadthing/shared\";\n\nimport type { CreateBuilderOptions } from \"./internal/upload-builder\";\nimport { createBuilder } from \"./internal/upload-builder\";\n\nexport * from \"./internal/types\";\nexport * as utapi from \"./sdk\";\nexport { createServerHandler } from \"./internal/edge\";\n\nexport const createUploadthing = <TErrorShape extends Json>(\n  opts?: CreateBuilderOptions<TErrorShape>,\n) => createBuilder<\"web\", TErrorShape>(opts);\n"],"mappings":";;;;;;;;;;;;AAaO,IAAM,cAAc;;;ACb3B;AAAA;AAAA;AAAA;AAAA;AAAA,SAAS,8BAA8B;AAIvC,IAAM,YAAY,QAAQ,IAAI;AAUvB,IAAM,cAAc,OAAO,aAAgC;AAChE,MAAI,CAAC,MAAM,QAAQ,QAAQ;AAAG,eAAW,CAAC,QAAQ;AAClD,MAAI,CAAC;AAAW,UAAM,IAAI,MAAM,0CAA0C;AAE1E,QAAM,MAAM,MAAM,MAAM,uBAAuB,iBAAiB,GAAG;AAAA,IACjE,QAAQ;AAAA,IACR,SAAS;AAAA,MACP,gBAAgB;AAAA,MAChB,yBAAyB;AAAA,MACzB,yBAAyB;AAAA,IAC3B;AAAA,IACA,MAAM,KAAK,UAAU,EAAE,SAAS,CAAC;AAAA,EACnC,CAAC;AACD,MAAI,CAAC,IAAI,IAAI;AACX,UAAM,IAAI,MAAM,wBAAwB;AAAA,EAC1C;AACA,SAAO,IAAI,KAAK;AAClB;AAaO,IAAM,cAAc,OAAO,aAAgC;AAChE,MAAI,CAAC,MAAM,QAAQ,QAAQ;AAAG,eAAW,CAAC,QAAQ;AAClD,MAAI,CAAC;AAAW,UAAM,IAAI,MAAM,0CAA0C;AAE1E,QAAM,MAAM,MAAM,MAAM,uBAAuB,iBAAiB,GAAG;AAAA,IACjE,QAAQ;AAAA,IACR,SAAS;AAAA,MACP,gBAAgB;AAAA,MAChB,yBAAyB;AAAA,MACzB,yBAAyB;AAAA,IAC3B;AAAA,IACA,MAAM,KAAK,UAAU,EAAE,SAAS,CAAC;AAAA,EACnC,CAAC;AACD,MAAI,CAAC,IAAI,IAAI;AACX,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC3C;AACA,SAAO,IAAI,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,MAAM,IAAsC;AAC7E;;;AC3DO,IAAM,sBAAsB,IAC9B,SACA;AACH,QAAM,UAAU,uBAAuB,GAAG,IAAI;AAC9C,QAAM,cACJ,CAAC,WAAiC,CAAC,UACjC,QAAQ,MAAM,EAAE,iBAAiB,UAAU,QAAQ,MAAM,OAAO;AACpE,SAAO;AAAA,IACL,KAAK,YAAY,KAAK;AAAA,IACtB,MAAM,YAAY,MAAM;AAAA,EAC1B;AACF;;;ACJO,IAAM,oBAAoB,CAC/B,SACG,cAAkC,IAAI;","names":[]}